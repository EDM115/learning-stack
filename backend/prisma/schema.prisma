generator client {
  provider        = "prisma-client-js"
  previewFeatures = [ "driverAdapters" ]
}

generator class_validator {
  provider = "prisma-class-validator-generator"
  output   = "./tsClasses"
}

generator typescriptInterfaces {
  provider      = "prisma-generator-typescript-interfaces"
  output        = "./tsInterfaces/interfaces.ts"
  headerComment = ""
}

generator typescriptTypes {
  provider      = "prisma-generator-typescript-interfaces"
  output        = "./tsTypes/types.ts"
  headerComment = ""
  modelType     = "type"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(cuid())
  name     String?
  email    String    @unique
  password String
  goals    Goal[]
  meals    Meal[]
  sessions Session[]
}

model Goal {
  id        String    @id @default(uuid())
  title     String
  completed Boolean   @default(false)
  duration  Int
  calories  Int
  weight    Int
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
  session   Session[]
}

model Meal {
  id       String   @id @default(uuid())
  name     String
  day      DateTime
  calories Int
  protein  Int
  carbs    Int
  fat      Int
  user     User?    @relation(fields: [userId], references: [id])
  userId   String?
}

model Session {
  id       String   @id @default(uuid())
  date     DateTime
  duration Int
  calories Int
  weight   Int
  user     User?    @relation(fields: [userId], references: [id])
  userId   String?
  goals    Goal[]
}
